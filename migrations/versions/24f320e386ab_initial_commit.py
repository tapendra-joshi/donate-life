"""initial commit

Revision ID: 24f320e386ab
Revises: 
Create Date: 2021-09-18 21:57:46.843093

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from constants.user_constants import UserStatus,UserVerificationStatus,BloodGroup,IndianStates,BloodRequirementStatus,UserSex


# revision identifiers, used by Alembic.
revision = '24f320e386ab'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blood_stock',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('ab_positive', sa.BigInteger(), nullable=False),
    sa.Column('ab_negative', sa.BigInteger(), nullable=False),
    sa.Column('a_positive', sa.BigInteger(), nullable=False),
    sa.Column('a_negative', sa.BigInteger(), nullable=False),
    sa.Column('b_positive', sa.BigInteger(), nullable=False),
    sa.Column('b_negative', sa.BigInteger(), nullable=False),
    sa.Column('o_positive', sa.BigInteger(), nullable=False),
    sa.Column('o_negative', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blood_stock_a_negative'), 'blood_stock', ['a_negative'], unique=False)
    op.create_index(op.f('ix_blood_stock_a_positive'), 'blood_stock', ['a_positive'], unique=False)
    op.create_index(op.f('ix_blood_stock_ab_negative'), 'blood_stock', ['ab_negative'], unique=False)
    op.create_index(op.f('ix_blood_stock_ab_positive'), 'blood_stock', ['ab_positive'], unique=False)
    op.create_index(op.f('ix_blood_stock_b_negative'), 'blood_stock', ['b_negative'], unique=False)
    op.create_index(op.f('ix_blood_stock_b_positive'), 'blood_stock', ['b_positive'], unique=False)
    op.create_index(op.f('ix_blood_stock_o_negative'), 'blood_stock', ['o_negative'], unique=False)
    op.create_index(op.f('ix_blood_stock_o_positive'), 'blood_stock', ['o_positive'], unique=False)
    op.create_table('life_users',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=65), nullable=False),
    sa.Column('reset_password_code', sa.String(length=255), nullable=True),
    sa.Column('reset_password_expiry', sa.DateTime(), nullable=True),
    sa.Column('blood_group', sqlalchemy_utils.types.choice.ChoiceType(BloodGroup), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('sex', sqlalchemy_utils.types.choice.ChoiceType(UserSex), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('profile_picture_data', sa.JSON(), nullable=True),
    sa.Column('city', sa.String(length=65), nullable=False),
    sa.Column('state', sa.String(length=65), nullable=False),
    sa.Column('country', sa.String(length=65), nullable=False),
    sa.Column('verification_status', sqlalchemy_utils.types.choice.ChoiceType(UserVerificationStatus), nullable=False),
    sa.Column('verification_code', sa.String(length=255), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(UserStatus), nullable=False),
    sa.Column('blood_requirement_status', sqlalchemy_utils.types.choice.ChoiceType(BloodRequirementStatus), nullable=False),
    sa.Column('required_blood_group', sqlalchemy_utils.types.choice.ChoiceType(BloodGroup), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_life_users_city'), 'life_users', ['city'], unique=False)
    op.create_index(op.f('ix_life_users_country'), 'life_users', ['country'], unique=False)
    op.create_index(op.f('ix_life_users_created_at'), 'life_users', ['created_at'], unique=False)
    op.create_index(op.f('ix_life_users_last_updated_at'), 'life_users', ['last_updated_at'], unique=False)
    op.create_index(op.f('ix_life_users_reset_password_code'), 'life_users', ['reset_password_code'], unique=False)
    op.create_index(op.f('ix_life_users_state'), 'life_users', ['state'], unique=False)
    op.create_index(op.f('ix_life_users_verification_code'), 'life_users', ['verification_code'], unique=False)
    op.create_table('organiser',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=65), nullable=False),
    sa.Column('reset_password_code', sa.String(length=255), nullable=True),
    sa.Column('reset_password_expiry', sa.DateTime(), nullable=True),
    sa.Column('organiser_name', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('street1', sa.String(length=65), nullable=True),
    sa.Column('street2', sa.String(length=65), nullable=True),
    sa.Column('city', sa.String(length=65), nullable=False),
    sa.Column('state', sa.String(length=65), nullable=False),
    sa.Column('country', sa.String(length=65), nullable=False),
    sa.Column('verification_status', sqlalchemy_utils.types.choice.ChoiceType(UserVerificationStatus), nullable=False),
    sa.Column('verification_code', sa.String(length=255), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(UserStatus), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_organiser_city'), 'organiser', ['city'], unique=False)
    op.create_index(op.f('ix_organiser_country'), 'organiser', ['country'], unique=False)
    op.create_index(op.f('ix_organiser_created_at'), 'organiser', ['created_at'], unique=False)
    op.create_index(op.f('ix_organiser_id'), 'organiser', ['id'], unique=False)
    op.create_index(op.f('ix_organiser_last_updated_at'), 'organiser', ['last_updated_at'], unique=False)
    op.create_index(op.f('ix_organiser_reset_password_code'), 'organiser', ['reset_password_code'], unique=False)
    op.create_index(op.f('ix_organiser_state'), 'organiser', ['state'], unique=False)
    op.create_index(op.f('ix_organiser_street1'), 'organiser', ['street1'], unique=False)
    op.create_index(op.f('ix_organiser_street2'), 'organiser', ['street2'], unique=False)
    op.create_index(op.f('ix_organiser_verification_code'), 'organiser', ['verification_code'], unique=False)
    op.create_table('blood_banks',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=65), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=False),
    sa.Column('district', sa.String(length=65), nullable=True),
    sa.Column('pincode', sa.BigInteger(), nullable=True),
    sa.Column('country', sa.String(length=65), nullable=False),
    sa.Column('blood_stock_id', sa.BigInteger(), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('contact_number', sa.String(length=65), nullable=True),
    sa.Column('mobile_number', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['blood_stock_id'], ['blood_stock.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blood_banks_city'), 'blood_banks', ['city'], unique=False)
    op.create_index(op.f('ix_blood_banks_country'), 'blood_banks', ['country'], unique=False)
    op.create_index(op.f('ix_blood_banks_created_at'), 'blood_banks', ['created_at'], unique=False)
    op.create_index(op.f('ix_blood_banks_district'), 'blood_banks', ['district'], unique=False)
    op.create_index(op.f('ix_blood_banks_last_updated_at'), 'blood_banks', ['last_updated_at'], unique=False)
    op.create_index(op.f('ix_blood_banks_latitude'), 'blood_banks', ['latitude'], unique=False)
    op.create_index(op.f('ix_blood_banks_longitude'), 'blood_banks', ['longitude'], unique=False)
    op.create_index(op.f('ix_blood_banks_pincode'), 'blood_banks', ['pincode'], unique=False)
    op.create_index(op.f('ix_blood_banks_state'), 'blood_banks', ['state'], unique=False)
    op.create_table('life_events',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('event_name', sa.String(length=255), nullable=False),
    sa.Column('organiser_id', sa.BigInteger(), nullable=True),
    sa.Column('event_date', sa.DateTime(), nullable=False),
    sa.Column('event_city', sa.String(length=65), nullable=False),
    sa.Column('event_state', sa.String(length=65), nullable=False),
    sa.Column('event_country', sa.String(length=65), nullable=False),
    sa.ForeignKeyConstraint(['organiser_id'], ['organiser.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_life_events_created_at'), 'life_events', ['created_at'], unique=False)
    op.create_index(op.f('ix_life_events_event_city'), 'life_events', ['event_city'], unique=False)
    op.create_index(op.f('ix_life_events_event_country'), 'life_events', ['event_country'], unique=False)
    op.create_index(op.f('ix_life_events_event_date'), 'life_events', ['event_date'], unique=False)
    op.create_index(op.f('ix_life_events_event_state'), 'life_events', ['event_state'], unique=False)
    op.create_index(op.f('ix_life_events_id'), 'life_events', ['id'], unique=False)
    op.create_index(op.f('ix_life_events_last_updated_at'), 'life_events', ['last_updated_at'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_life_events_last_updated_at'), table_name='life_events')
    op.drop_index(op.f('ix_life_events_id'), table_name='life_events')
    op.drop_index(op.f('ix_life_events_event_state'), table_name='life_events')
    op.drop_index(op.f('ix_life_events_event_date'), table_name='life_events')
    op.drop_index(op.f('ix_life_events_event_country'), table_name='life_events')
    op.drop_index(op.f('ix_life_events_event_city'), table_name='life_events')
    op.drop_index(op.f('ix_life_events_created_at'), table_name='life_events')
    op.drop_table('life_events')
    op.drop_index(op.f('ix_blood_banks_state'), table_name='blood_banks')
    op.drop_index(op.f('ix_blood_banks_pincode'), table_name='blood_banks')
    op.drop_index(op.f('ix_blood_banks_longitude'), table_name='blood_banks')
    op.drop_index(op.f('ix_blood_banks_latitude'), table_name='blood_banks')
    op.drop_index(op.f('ix_blood_banks_last_updated_at'), table_name='blood_banks')
    op.drop_index(op.f('ix_blood_banks_district'), table_name='blood_banks')
    op.drop_index(op.f('ix_blood_banks_created_at'), table_name='blood_banks')
    op.drop_index(op.f('ix_blood_banks_country'), table_name='blood_banks')
    op.drop_index(op.f('ix_blood_banks_city'), table_name='blood_banks')
    op.drop_table('blood_banks')
    op.drop_index(op.f('ix_organiser_verification_code'), table_name='organiser')
    op.drop_index(op.f('ix_organiser_street2'), table_name='organiser')
    op.drop_index(op.f('ix_organiser_street1'), table_name='organiser')
    op.drop_index(op.f('ix_organiser_state'), table_name='organiser')
    op.drop_index(op.f('ix_organiser_reset_password_code'), table_name='organiser')
    op.drop_index(op.f('ix_organiser_last_updated_at'), table_name='organiser')
    op.drop_index(op.f('ix_organiser_id'), table_name='organiser')
    op.drop_index(op.f('ix_organiser_created_at'), table_name='organiser')
    op.drop_index(op.f('ix_organiser_country'), table_name='organiser')
    op.drop_index(op.f('ix_organiser_city'), table_name='organiser')
    op.drop_table('organiser')
    op.drop_index(op.f('ix_life_users_verification_code'), table_name='life_users')
    op.drop_index(op.f('ix_life_users_state'), table_name='life_users')
    op.drop_index(op.f('ix_life_users_reset_password_code'), table_name='life_users')
    op.drop_index(op.f('ix_life_users_last_updated_at'), table_name='life_users')
    op.drop_index(op.f('ix_life_users_created_at'), table_name='life_users')
    op.drop_index(op.f('ix_life_users_country'), table_name='life_users')
    op.drop_index(op.f('ix_life_users_city'), table_name='life_users')
    op.drop_table('life_users')
    op.drop_index(op.f('ix_blood_stock_o_positive'), table_name='blood_stock')
    op.drop_index(op.f('ix_blood_stock_o_negative'), table_name='blood_stock')
    op.drop_index(op.f('ix_blood_stock_b_positive'), table_name='blood_stock')
    op.drop_index(op.f('ix_blood_stock_b_negative'), table_name='blood_stock')
    op.drop_index(op.f('ix_blood_stock_ab_positive'), table_name='blood_stock')
    op.drop_index(op.f('ix_blood_stock_ab_negative'), table_name='blood_stock')
    op.drop_index(op.f('ix_blood_stock_a_positive'), table_name='blood_stock')
    op.drop_index(op.f('ix_blood_stock_a_negative'), table_name='blood_stock')
    op.drop_table('blood_stock')
    # ### end Alembic commands ###
